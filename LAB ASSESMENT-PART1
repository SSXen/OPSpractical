#Check if nginx is installed
if command -v nginx &> /dev/null
then
   echo"NGINX is installed."

   #Check if its running
   if pgrep nginx &> /dev/null
   then
      echo"Nginx already running"
   else
      echo"Nginx not running"
      sudo service nginx start
   fi
else
   echo"NGINX not installed"
   apt-get update
   apt-get install nginx -y

   #Start nginx after installation
   service nginx start

   #Enable Nginx to start on boot
   systemctl enable nginx
   echo"Nginx is installed and running"
fi
cd/var/www/html.
mkdir labs
cd labs
chown user:root labs

ln -s /var/labs ~/html

touch index.html
cd index.html



<!DOCTYPE html>
<html>
<head>
<title>Page Title</title>
</head>
<body>

<h1>STUDENT INFORMATION PAGE</h1>
<p>initials:MS  // initials:RDK </p>
<p>Name: Mulalo // Name: Bouraga </p>
<p>student No:221917845  // student No:218001568 </p>
<p>Course: Computer System  </p>
</body>
</html>

##Setting up mySql database 
##install my sql
apt update
apt install -y mysql-server

#start
systemctl start mysql

#enable to start on boot
systemctl enable mysql

#Secure sql installation
mysql_secure-installation

#configure firewall rules
ufw allow mysql

#access mysql client
mysql -u root -p

sudo systemctl stop mysql
sudo mysqld_safe --skip-grant-tables &
mysql -u root
UPDATE mysql.user SET authentication_string=PASSWORD('your_new_password') WHERE User='root';
FLUSH PRIVILEGES;
quit
sudo pkill mysqld
sudo systemctl start mysql


##Creating Student table

#connect to mysql server
mysql -u azureuser -p 
CREATE DATABASE studentsManagement;
USE student_record;

CREATE TABLE studentInfo(
   student_id INT PRIMARY KEY
AUTO_INCREMENT,
    name VARCHAR(50),
    age INT,
    gender VARCHAR(10), 
    course VARCHAR(50)
);

)
#populate the"Students" with student records
INSERT INTO student(name,age,gender,course)
VALUES
     ('Mulalo','20',Male,'Computer Systems');

#verify the table and data using select statements
SELECT statement
SELECT *FROM students;
